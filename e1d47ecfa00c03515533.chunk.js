(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{812:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=p(a(50)),l=p(a(44)),r=p(a(9)),o=p(a(4)),u=p(a(6)),c=p(a(5)),i=m(a(54)),s=m(a(1)),h=m(a(10));function m(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t.default=e,t}function p(e){return e&&e.__esModule?e:{default:e}}var d=function e(){(0,c.default)(this,e)},f=function(e){function t(){(0,c.default)(this,t);var e=(0,o.default)(this,(t.__proto__||(0,l.default)(t)).apply(this,arguments));return e.state=new d,e.freshHighlight=function(){var t=h.findDOMNode(e);t&&(0,n.default)(t.querySelectorAll("pre")).forEach(function(e){i.highlightBlock(e)})},e}return(0,u.default)(t,e),(0,r.default)(t,[{key:"componentDidMount",value:function(){this.freshHighlight()}},{key:"render",value:function(){return s.createElement("div",null,s.createElement("h1",null,"Compare to callback"),s.createElement("p",null,"Normal callback data format:"),s.createElement("pre",{className:"highlight highlight-source-jsx"},["<Table","  dataSource={this.props.value}","  dataSourceFormatter={toObjectArray}","/>"].join("\n")),s.createElement("p",null,s.createElement("code",null,"rc-stream")," ways:"),s.createElement("pre",{className:"highlight highlight-source-jsx"},["<ToObjectArray stream={this.props.value$}>","  <Table />","</ToObjectArray>"].join("\n")),s.createElement("h2",null,"Reactive programming"),s.createElement("p",null,"This is the only way to bind Observable source to components."),s.createElement("h2",null,"Non-invasive"),s.createElement("p",null,"What if ",s.createElement("code",null,"Table")," doesn't have this callback ",s.createElement("code",null,"dataSourceFormatter"),"?"),s.createElement("p",null,s.createElement("code",null,"rc-stream")," help you handle data formatter in midway."),s.createElement("h2",null,"Expansibility"),s.createElement("p",null,"You can intercept any props, by using your custom stream components."),s.createElement("h2",null,"Visualization"),s.createElement("p",null,"Stream is a real component, so you can use it visually! Imagine a data processing container that can be dragged."))}}]),t}(s.PureComponent);t.default=f,f.defaultProps=new function e(){(0,c.default)(this,e)}}}]);